mod xgb_inference;

fn main(input_vector: Span<i32>) -> i32 {
    let tree_0 = xgb_inference::Tree {
    base_weights: array![0, -2473, 112, -822, -2119, -57, 465, -1789, -980, 440, -72, 579, 20, -439, -2068, -144, 671, -163, 26, 268, 599, 214, -300, -763, -439, 133, 740, -24, -272, 544, 5, 349, 6, 584, 257, 6, 352, -220, -207, 252, 151, -42, 39, -177, -70, 197, 87, -26, 21, 88, 130, 181, -148, 56, -51, 135, 75, 21, -114].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 11, 13, 0, 15, 17, 19, 21, 0, 23, 0, 25, 27, 29, 31, 33, 35, 37, 0, 0, 0, 39, 41, 43, 45, 47, 49, 0, 51, 0, 53, 55, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 12, 14, 0, 16, 18, 20, 22, 0, 24, 0, 26, 28, 30, 32, 34, 36, 38, 0, 0, 0, 40, 42, 44, 46, 48, 50, 0, 52, 0, 54, 56, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1168381, 752032, 3068555, -822, 947617, 2042139, 4312627, 820115, -980, 1718510, 2754346, 3094615, 89209033, -439, 853088, -144, 1847756, 2571469, 2765466, 3086288, 3947160, 5325393, 95662524, -763, -439, 133, 1968398, 2491348, 2590438, 2762862, 2877588, 3081053, 6, 3891684, 257, 4791019, 6542042, -220, 118624160, 252, 151, -42, 39, -177, -70, 197, 87, -26, 21, 88, 130, 181, -148, 56, -51, 135, 75, 21, -114].span()
};
    let tree_1 = xgb_inference::Tree {
    base_weights: array![-1, -1751, 78, -1928, -1518, -53, 304, -540, -726, -1279, -704, -44, -727, 341, -213, -312, -1486, 313, -56, -401, -22, 157, 381, -158, -146, -549, -315, -104, 478, -73, 209, 157, 129, 420, 151, 49, -269, 110, 173, -34, -3, 41, 103, 57, 20, 102, 138, 1, 75, -81, 110, -109, -28].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 0, 0, 15, 0, 17, 19, 21, 23, 0, 25, 27, 29, 0, 0, 31, 33, 0, 35, 0, 0, 0, 37, 39, 41, 0, 43, 45, 47, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 0, 0, 16, 0, 18, 20, 22, 24, 0, 26, 28, 30, 0, 0, 32, 34, 0, 36, 0, 0, 0, 38, 40, 42, 0, 44, 46, 48, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1168381, 752032, 3013939, 726565, 947617, 3005109, 89209033, -540, -726, 820115, -704, 2042139, 3009388, 3094615, 95662524, -312, 853088, 1718510, 2966997, -401, -22, 3019484, 4312627, -158, 118624160, -549, -315, -104, 1902391, 2754346, 2995228, 157, 3053391, 3226122, 5325393, 101319990, 317403500, 110, 173, -34, -3, 41, 103, 57, 20, 102, 138, 1, 75, -81, 110, -109, -28].span()
};
    let tree_2 = xgb_inference::Tree {
    base_weights: array![-1, -1245, 55, -1190, -506, -29, 230, -1363, -914, 222, -36, 287, 9, -380, -522, -221, -1068, -74, 339, -80, 11, 237, 329, 107, -152, -394, -227, 380, 60, -51, -354, 390, -4, 309, 168, 427, 274, 3, 175, -114, -104, 78, 178, 5, -35, -205, -90, 141, 64, -63, 2, 51, 108, -173, 67, 111, 161, 72, 141, 39, -36, 74, 31, 11, -57].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 15, 17, 19, 21, 23, 0, 0, 0, 25, 0, 27, 29, 31, 33, 35, 37, 39, 0, 0, 41, 0, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 16, 18, 20, 22, 24, 0, 0, 0, 26, 0, 28, 30, 32, 34, 36, 38, 40, 0, 0, 42, 0, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1168381, 947617, 3068555, 752032, -506, 2042139, 4312627, 726565, 820115, 1718510, 2754346, 3265109, 89209033, -380, -522, -221, 853088, -74, 1968398, 2723443, 2765466, 3153665, 3396692, 5325393, 95662524, -394, -227, 1902391, 60, 2571469, 2727832, 2762862, 2780092, 3094615, 3160907, 3353468, 3947160, 4791019, 6542042, -114, 118624160, 78, 178, 5, -35, -205, -90, 141, 64, -63, 2, 51, 108, -173, 67, 111, 161, 72, 141, 39, -36, 74, 31, 11, -57].span()
};
    let tree_3 = xgb_inference::Tree {
    base_weights: array![-1, -885, 39, -845, -364, -28, 152, -964, -654, -21, -524, 171, -108, -892, -375, -131, -720, -31, 145, -289, -16, 188, 86, -74, -39, -282, -196, -787, -163, -15, -180, 182, -44, 135, 242, -165, 136, 76, -135, -174, -283, -11, 113, -184, 0, 28, 128, 50, -17, 155, 70, 100, 23, -61, -4].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 15, 17, 19, 21, 23, 25, 0, 0, 27, 29, 31, 0, 0, 33, 35, 0, 37, 0, 0, 39, 0, 41, 43, 45, 0, 47, 49, 0, 51, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 16, 18, 20, 22, 24, 26, 0, 0, 28, 30, 32, 0, 0, 34, 36, 0, 38, 0, 0, 40, 0, 42, 44, 46, 0, 48, 50, 0, 52, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1168381, 947617, 3013939, 752032, -364, 3005109, 89209033, 726565, 782553, 2966997, 3009388, 3891684, 101319990, 656215, -375, -131, 853088, 2904090, 3001917, -289, -16, 3226122, 3947160, -74, 118624160, -282, -196, 820115, -163, 2877588, 2926018, 2995228, -44, 3194664, 3232245, -165, 4312627, 76, 317403500, -174, -283, -11, 113, -184, 0, 28, 128, 50, -17, 155, 70, 100, 23, -61, -4].span()
};
    let tree_4 = xgb_inference::Tree {
    base_weights: array![-1, -631, 27, -602, -261, -16, 117, -684, -470, 41, -35, 150, 18, -631, -269, -94, -517, 4, 260, -336, -22, 121, 177, -119, 41, -199, -141, -566, -117, 18, -133, 137, 216, -226, -145, 285, -30, 164, 39, 293, 154, 235, 4, -125, -204, 51, -2, 34, 72, -97, -7, -22, 138, -163, -5, 42, 163, -20, 34, 123, 77, 5, 52, 99, 53, 16, -23].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 15, 17, 19, 21, 23, 25, 0, 0, 27, 29, 31, 33, 35, 37, 39, 0, 41, 0, 0, 43, 0, 45, 0, 0, 47, 49, 0, 51, 53, 55, 57, 59, 61, 63, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 16, 18, 20, 22, 24, 26, 0, 0, 28, 30, 32, 34, 36, 38, 40, 0, 42, 0, 0, 44, 0, 46, 0, 0, 48, 50, 0, 52, 54, 56, 58, 60, 62, 64, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1168381, 947617, 3068555, 752032, -261, 2571469, 3891684, 726565, 782553, 2548284, 2590438, 3265109, 3947160, 656215, -269, -94, 853088, 2540836, 2551461, 2582588, 2602123, 3194664, 3306236, -119, 4312627, -199, -141, 820115, -117, 2042139, -133, 137, 2554781, 2579127, -145, 2593722, 2615434, 3186518, 3221716, 3272438, 3353468, 4058129, 89209033, -125, -204, 51, -2, 34, 72, -97, -7, -22, 138, -163, -5, 42, 163, -20, 34, 123, 77, 5, 52, 99, 53, 16, -23].span()
};
    let tree_5 = xgb_inference::Tree {
    base_weights: array![-1, -432, 20, -450, -65, -13, 77, -429, -188, -9, -372, 92, -5, -485, -337, 204, -14, -206, -10, 99, 89, -123, 16, -446, -194, -67, -372, 31, 236, -23, 96, 16, 105, -23, -48, 86, -54, -140, -101, -122, -84, 89, 32, -3, -45, 35, -30, 26, -16, 61, 28, 41, 10, -46, -1].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 15, 17, 19, 21, 23, 25, 27, 29, 0, 0, 0, 31, 33, 35, 37, 0, 0, 39, 0, 41, 43, 45, 47, 49, 0, 0, 51, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 16, 18, 20, 22, 24, 26, 28, 30, 0, 0, 0, 32, 34, 36, 38, 0, 0, 40, 0, 42, 44, 46, 48, 50, 0, 0, 52, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1718510, 1168381, 3013939, 947617, -65, 3005109, 4791019, 752032, -188, 2042139, 3009388, 3019484, 5325393, 726565, 782553, 1847756, 2960269, -206, -10, 99, 3094615, 4997172, 89209033, 656215, -194, -67, 853088, 31, 1968398, 2904090, 3001917, 3053391, 3130055, -23, -48, 6542042, 101319990, -140, -101, -122, -84, 89, 32, -3, -45, 35, -30, 26, -16, 61, 28, 41, 10, -46, -1].span()
};
    let tree_6 = xgb_inference::Tree {
    base_weights: array![-1, -308, 14, -320, -46, -19, 47, -305, -135, -4, -606, 343, 34, -345, -241, -18, 260, -342, -293, 368, 67, -228, 48, -95, -139, -54, -297, -4, -155, 122, 182, 134, -305, 91, 156, 8, -404, 182, 43, -112, -60, -6, 64, -122, -37, 42, 87, -40, 153, 20, 151, -101, 14].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 15, 17, 19, 21, 23, 25, 27, 29, 0, 31, 33, 0, 35, 37, 0, 0, 0, 39, 41, 43, 0, 45, 0, 0, 0, 0, 47, 0, 49, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 16, 18, 20, 22, 24, 26, 28, 30, 0, 32, 34, 0, 36, 38, 0, 0, 0, 40, 42, 44, 0, 46, 0, 0, 0, 0, 48, 0, 50, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1718510, 1168381, 2877588, 947617, -46, 2864392, 2896843, 752032, -135, 2846093, 2869823, 2894018, 2926018, 726565, 820115, 2811752, 2853126, -342, 2873403, 2888733, 67, 2919635, 2944225, -95, -139, -54, 853088, 2783913, 2815614, 122, 2861149, 134, -305, 91, 156, 2914407, -404, 2939117, 2947919, -112, -60, -6, 64, -122, -37, 42, 87, -40, 153, 20, 151, -101, 14].span()
};
    let tree_7 = xgb_inference::Tree {
    base_weights: array![-1, -219, 10, -228, -33, -7, 44, -216, -97, 39, -22, 69, 0, -244, -172, -38, 99, -229, -13, 53, 465, -172, 20, -222, -100, -38, -213, 75, -216, 301, 55, -151, -100, 211, -19, 70, -327, 195, 75, -60, -32, 167, -8, -85, -60, -81, -43, -1, 125, -155, -48, -225, 29, -88, -22, -13, 101, -138, -3, 16, 119, -52, -141, 43, 67, -50, 3].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 0, 0, 45, 47, 49, 0, 51, 53, 0, 55, 57, 59, 61, 0, 0, 0, 0, 63, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 0, 0, 46, 48, 50, 0, 52, 54, 0, 56, 58, 60, 62, 0, 0, 0, 0, 64, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1718510, 1168381, 3068555, 947617, -33, 2571469, 3599162, 752032, -97, 2438747, 2590438, 3559490, 3686410, 726565, 820115, 2345380, 2447828, 2582588, 2602123, 3501006, 3580166, 3652092, 3841447, 128964, -100, -38, 853088, 2294497, 2371970, 301, 2459764, 2576119, -100, 2593722, 2608673, 3463183, 3534327, 195, 75, -60, -32, 3799055, 3947160, -85, -60, -81, -43, -1, 125, -155, -48, -225, 29, -88, -22, -13, 101, -138, -3, 16, 119, -52, -141, 43, 67, -50, 3].span()
};
    let tree_8 = xgb_inference::Tree {
    base_weights: array![-1, -156, 7, -162, -24, -19, 21, -154, -70, 0, -272, 294, 14, -173, -123, -4, 93, -218, -174, 361, 65, -239, 19, -157, -72, -27, -153, 2, -139, -88, -142, 56, 154, -125, -142, 126, 13, -51, -29, -58, -31, 45, -2, -83, 137, 23, -102, 14, 76, -40, 7].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 15, 17, 19, 21, 23, 25, 27, 0, 0, 29, 31, 0, 33, 35, 37, 0, 0, 39, 41, 0, 43, 0, 0, 0, 0, 45, 47, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 16, 18, 20, 22, 24, 26, 28, 0, 0, 30, 32, 0, 34, 36, 38, 0, 0, 40, 42, 0, 44, 0, 0, 0, 0, 46, 48, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1718510, 1168381, 2754346, 947617, -24, 2731405, 2768933, 752032, -70, 2727832, 2734346, 2762862, 2780092, 726565, 820115, 2723443, 93, -218, 2751362, 2757903, 65, 2770982, 2811752, 656215, -72, -27, 853088, 2042139, -139, 2747387, -142, 56, 154, -125, 2774627, 2798959, 2842342, -51, -29, -58, -31, 45, -2, -83, 137, 23, -102, 14, 76, -40, 7].span()
};
    let tree_9 = xgb_inference::Tree {
    base_weights: array![-1, -111, 5, -116, -17, 127, 3, -110, -50, 16, 81, -69, 8, -123, -88, -27, -234, 217, 5, -111, -52, -19, -110, -129, 24, -41, -276, -161, 7, -47, -29, -42, -22, 2, -77, 41, -26, -108, -53, 146, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 0, 0, 15, 17, 19, 21, 23, 25, 0, 27, 29, 0, 0, 31, 33, 35, 0, 37, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 0, 0, 16, 18, 20, 22, 24, 26, 0, 28, 30, 0, 0, 32, 34, 36, 0, 38, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1718510, 1168381, 1968398, 947617, -17, 1902391, 2438747, 752032, -50, 16, 81, 2410323, 2447828, 726565, 820115, 2235613, 2424412, 217, 2459764, 128964, -52, -19, 853088, 2115341, 2345380, -41, 2430922, -161, 2478457, -47, -29, -42, -22, 2, -77, 41, -26, -108, -53, 146, 0].span()
};
    let tree_10 = xgb_inference::Tree {
    base_weights: array![-1, -48, 7, -7, -223, 191, 4, -41, 343, -187, 6, -28, -115, 202, 162, 26, -134, 90, 3, -47, 156, 2, 92, -151, 6, -11, -60, 33, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 9, 11, 13, 15, 17, 19, 0, 0, 21, 0, 0, 0, 23, 25, 0, 0, 0, 0, 27, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 10, 12, 14, 16, 18, 20, 0, 0, 22, 0, 0, 0, 24, 26, 0, 0, 0, 0, 28, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2491348, 2478457, 2499774, 2459764, -223, 191, 2511766, 2447828, 2465218, 2504023, 2522817, 2438747, -115, 202, 2471407, 26, -134, 90, 2526583, 2424412, 156, 2, 92, -151, 2571469, -11, -60, 33, 0].span()
};
    let tree_11 = xgb_inference::Tree {
    base_weights: array![0, -24, 14, -12, -194, 210, 9, -23, 66, -157, -123, 259, 46, -149, 14, -9, -329, 265, 20, -61, -102, 40, 111, -90, -95, 269, 10, -18, 102, 54, 100, -98, 65, -195, 98, 17, -167, 24, 132, -46, 12, -1, -89, 44, -21, 23, -99, -73, -22, 53, 3].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 0, 23, 25, 27, 0, 29, 31, 33, 0, 0, 0, 0, 35, 37, 39, 41, 0, 0, 0, 0, 43, 45, 0, 0, 47, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 0, 24, 26, 28, 0, 30, 32, 34, 0, 0, 0, 0, 36, 38, 40, 42, 0, 0, 0, 0, 44, 46, 0, 0, 48, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2754346, 2731405, 2768933, 2692983, 2734346, 2762862, 2783913, 2688713, 2698678, -157, 2751362, 2757903, 46, 2770982, 2790453, 2678934, -329, 2695330, 2701499, 2747387, -102, 40, 111, -90, 2774627, 2786868, 2798959, 2666947, 102, 54, 100, -98, 2718614, 2737491, 98, 17, 2780092, 24, 132, -46, 2811752, -1, -89, 44, -21, 23, -99, -73, -22, 53, 3].span()
};
    let tree_12 = xgb_inference::Tree {
    base_weights: array![0, -15, 16, -5, -441, 207, 4, -15, 171, -247, -217, 255, 42, -314, 16, -12, -84, 228, 90, 95, -221, 208, 110, -82, -292, 124, 11, -71, -7, 36, 79, 30, 60, 76, 177, -185, 187, 40, 107, -183, 15, -20, -33, 3, -9, 39, -21, 34, 69, -3, 108, 34, 0, -74, -31, 128, 3].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 21, 0, 23, 25, 27, 0, 29, 31, 0, 0, 33, 0, 35, 0, 37, 39, 41, 43, 0, 0, 45, 0, 0, 47, 0, 49, 51, 0, 53, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 22, 0, 24, 26, 28, 0, 30, 32, 0, 0, 34, 0, 36, 0, 38, 40, 42, 44, 0, 0, 46, 0, 0, 48, 0, 50, 52, 0, 54, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2877588, 2864392, 2904090, 2842342, 2869823, 2894018, 2926018, 2838902, 2855310, -247, 2873403, 2888733, 42, 2919635, 2944225, 1168381, -84, 2846093, 2861149, 95, -221, 2881707, 110, 2909113, -292, 2939117, 2951663, 947617, 2666947, 36, 79, 2858913, 60, 76, 2885129, -185, 2914407, 2930164, 107, 2947919, 2956535, -20, -33, 3, -9, 39, -21, 34, 69, -3, 108, 34, 0, -74, -31, 128, 3].span()
};
    let tree_13 = xgb_inference::Tree {
    base_weights: array![0, -22, 8, -10, -261, 327, 2, -20, 183, -172, -97, 14, 138, -141, 6, -6, -282, 204, -81, 5, -63, 122, -535, 200, 2, -15, 238, -46, -338, -34, -13, 55, 74, -209, -103, 142, 75, -234, 7, 0, -43, 48, 90, -141, -53, 41, -7, 69, 14, 60, 1].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 0, 29, 0, 0, 31, 33, 35, 37, 39, 41, 0, 43, 0, 0, 45, 0, 0, 0, 47, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 0, 30, 0, 0, 32, 34, 36, 38, 40, 42, 0, 44, 0, 0, 46, 0, 0, 0, 48, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2642518, 2628257, 2654031, 2615434, 2632357, 2647346, 2671632, 2602123, 2619498, -172, 2638495, 14, 138, 2666947, 2688713, 2593722, 2605362, 204, 2623112, 5, -63, 2662644, 2669982, 2678934, 2692983, 2571469, 2598117, -46, 2608673, -34, -13, 2658806, 74, -209, -103, 2674936, 75, -234, 2698678, 0, -43, 48, 90, -141, -53, 41, -7, 69, 14, 60, 1].span()
};
    let tree_14 = xgb_inference::Tree {
    base_weights: array![0, 1, -103, -8, 23, -45, -5, -5, -74, 93, 15, -8, 59, -62, -17, 57, 74, -139, 25, -5, -292, 145, 4, 22, -50, 12, 104, 14, -171, 165, 15, -2, 35, -155, -15, 64, 32, -62, 18, -15, 28, -7, 13, 44, 18, -46, 100, 32, 96, -36, 8].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 0, 11, 13, 15, 17, 19, 21, 0, 23, 0, 25, 27, 29, 31, 33, 35, 37, 39, 0, 41, 43, 45, 0, 47, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 0, 12, 14, 16, 18, 20, 22, 0, 24, 0, 26, 28, 30, 32, 34, 36, 38, 40, 0, 42, 44, 46, 0, 48, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![118624160, 3094615, 317403500, 3053391, 3137513, -45, -5, 3013939, 3065019, 3101162, 3160907, 3005109, 3030550, -62, 3086288, 57, 3111744, 3153665, 3194664, 2988351, 3009388, 3019484, 3034681, 3073038, -50, 3106011, 3125656, 3148683, -171, 3186518, 3221716, -2, 35, -155, -15, 64, 32, -62, 18, -15, 28, -7, 13, 44, 18, -46, 100, 32, 96, -36, 8].span()
};
    let tree_15 = xgb_inference::Tree {
    base_weights: array![0, -26, 4, 3, -158, 137, 2, -20, 247, -133, 3, -10, -83, 145, 117, 19, -96, 64, 1, -24, 112, 2, 66, -109, 3, -2, -31, 23, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 9, 11, 13, 15, 17, 19, 0, 0, 21, 0, 0, 0, 23, 25, 0, 0, 0, 0, 27, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 10, 12, 14, 16, 18, 20, 0, 0, 22, 0, 0, 0, 24, 26, 0, 0, 0, 0, 28, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2491348, 2478457, 2499774, 2459764, -158, 137, 2511766, 2447828, 2465218, 2504023, 2522817, 2438747, -83, 145, 2471407, 19, -96, 64, 2526583, 2388133, 112, 2, 66, -109, 2571469, -2, -31, 23, 0].span()
};
    let tree_16 = xgb_inference::Tree {
    base_weights: array![0, -44, 2, -23, -40, 93, 0, -10, -47, 15, 133, -95, 3, -10, 4, -28, -40, 62, 15, -4, -114, 121, 1, -3, -44, -75, -66, -108, 2, -27, -11, -15, -28, 37, -100, 76, 0].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 11, 13, 15, 0, 17, 19, 21, 0, 0, 0, 23, 0, 0, 0, 25, 0, 27, 0, 29, 0, 31, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 12, 14, 16, 0, 18, 20, 22, 0, 0, 0, 24, 0, 0, 0, 26, 0, 28, 0, 30, 0, 32, 34, 36, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1718510, 128964, 2042139, -23, 180514, 1902391, 2294497, 152628, 656215, 15, 1968398, 2115341, 2328477, -10, 4, -28, 726565, 62, 15, -4, 2176177, 121, 2371970, -3, 752032, -75, 2264257, 2345380, 2388133, -27, -11, -15, -28, 37, -100, 76, 0].span()
};
    let tree_17 = xgb_inference::Tree {
    base_weights: array![0, 1, -57, -4, 25, -146, -13, -2, -130, 113, -2, -53, -32, 51, -73, -4, 210, -84, -63, 54, 103, -87, 17, -32, -3, -2, -98, 79, 43, -42, -7, 128, -67, -15, -128, 78, -2, -1, 19, -45, -21, 66, 30, 3, -31, -15, 36, -77, 6].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 0, 0, 0, 23, 25, 27, 29, 0, 31, 0, 33, 35, 0, 0, 37, 39, 0, 0, 0, 0, 41, 43, 45, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 0, 0, 0, 24, 26, 28, 30, 0, 32, 0, 34, 36, 0, 0, 38, 40, 0, 0, 0, 0, 42, 44, 46, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![89209033, 3265109, 101319990, 3242688, 3369489, 95662524, 118624160, 3226122, 3256421, 3353468, 3463183, -53, -32, 51, 317403500, 3207953, 3232245, 3248589, -63, 3306236, 103, 3443639, 3501006, -32, -3, 3160907, 3214453, 79, 43, -42, -7, 3272438, 3322262, 3428226, -128, 78, 3559490, -1, 19, -45, -21, 66, 30, 3, -31, -15, 36, -77, 6].span()
};
    let tree_18 = xgb_inference::Tree {
    base_weights: array![0, 2, -29, -3, 29, -78, -6, -1, -93, 80, 7, -15, -118, 120, -34, -3, 151, -60, -45, 39, 73, -62, 30, -42, 33, -132, -25, 44, 26, -70, -8, -1, -67, 57, 31, -30, -5, 91, -47, -10, -92, 56, 10, -29, -47, 26, -41, -1, 64, -37, -16, 21, 50, 2, -22, 11, -25, -55, 12, -31, -3].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 0, 37, 0, 39, 41, 0, 0, 43, 0, 0, 0, 0, 45, 47, 49, 0, 0, 0, 0, 51, 53, 55, 0, 0, 57, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 0, 38, 0, 40, 42, 0, 0, 44, 0, 0, 0, 0, 46, 48, 50, 0, 0, 0, 0, 52, 54, 56, 0, 0, 58, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4312627, 3265109, 5597405, 3242688, 3369489, 4791019, 6542042, 3226122, 3256421, 3353468, 3463183, 4500476, 5325393, 6094339, 7536609, 3194664, 3232245, 3248589, -45, 3306236, 73, 3443639, 3501006, -42, 33, 4997172, -25, 44, 26, -70, 89209033, 3186518, 3201759, 57, 31, -30, -5, 3297054, 3322262, 3408122, -92, 56, 3559490, -29, -47, 26, 101319990, -1, 64, -37, -16, 21, 50, 2, -22, 11, -25, -55, 12, -31, -3].span()
};
    let tree_19 = xgb_inference::Tree {
    base_weights: array![0, 2, -20, 0, 296, -162, -2, 1, -71, 129, 43, -54, -34, 80, -18, 0, 79, 108, 50, -156, -4, 1, -66, 39, -6, 17, 48, -6, 37, 4, -95, 47, -13, -1, 11, 13, -6].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 0, 0, 0, 17, 19, 21, 23, 25, 27, 29, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 0, 0, 0, 18, 20, 22, 24, 26, 28, 30, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3599162, 3559490, 3686410, 3534327, 3580166, 3652092, 3841447, 3463183, -71, 129, 43, -54, -34, 3742625, 3947160, 3443639, 3501006, 3709776, 3799055, 3891684, 4058129, 3265109, -66, 39, -6, 17, 48, -6, 37, 4, -95, 47, 4312627, -1, 11, 13, -6].span()
};
    let tree_20 = xgb_inference::Tree {
    base_weights: array![0, -29, 1, -16, -26, 69, 0, -1, -31, 12, 98, -87, 1, -20, -26, 45, 12, -2, -124, 85, 0, -15, -11, -53, -20, -31, 198, -71, 1, -10, 1, 1, -19, 88, 27, 56, 0].span(),
    left_children: array![1, 3, 5, 0, 7, 9, 11, 0, 13, 0, 15, 17, 19, 0, 21, 0, 0, 0, 23, 25, 27, 29, 0, 0, 0, 31, 33, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 8, 10, 12, 0, 14, 0, 16, 18, 20, 0, 22, 0, 0, 0, 24, 26, 28, 30, 0, 0, 0, 32, 34, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1718510, 128964, 2042139, -16, 180514, 1902391, 2235613, -1, 656215, 12, 1968398, 2115341, 2345380, -20, 820115, 45, 12, -2, 2176177, 2294497, 2371970, 752032, -11, -53, -20, 2264257, 2328477, -71, 2388133, -10, 1, 1, -19, 88, 27, 56, 0].span()
};
    let tree_21 = xgb_inference::Tree {
    base_weights: array![0, -10, 4, -2, -183, 237, 0, -9, 136, -122, -65, 12, 100, -96, 3, 1, -198, 148, -53, 5, -44, 93, -380, 147, -1, -5, 176, -31, -238, -23, -8, 44, 55, -149, -72, 107, 54, -167, 3, 2, -29, 36, 66, -100, -37, 31, -4, 51, 11, 24, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 0, 29, 0, 0, 31, 33, 35, 37, 39, 41, 0, 43, 0, 0, 45, 0, 0, 0, 47, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 0, 30, 0, 0, 32, 34, 36, 38, 40, 42, 0, 44, 0, 0, 46, 0, 0, 0, 48, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2642518, 2628257, 2654031, 2615434, 2632357, 2647346, 2671632, 2602123, 2619498, -122, 2638495, 12, 100, 2666947, 2688713, 2593722, 2605362, 148, 2623112, 5, -44, 2662644, 2669982, 2678934, 2692983, 2571469, 2598117, -31, 2608673, -23, -8, 2658806, 55, -149, -72, 2674936, 54, -167, 2718614, 2, -29, 36, 66, -100, -37, 31, -4, 51, 11, 24, 0].span()
};
    let tree_22 = xgb_inference::Tree {
    base_weights: array![0, -16, 3, 5, -112, 99, 1, -11, 179, -95, 2, -4, -59, 105, 85, 14, -69, 46, 0, -14, 81, 2, 48, -78, 2, -2, -28, 17, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 9, 11, 13, 15, 17, 19, 0, 0, 21, 0, 0, 0, 23, 25, 0, 0, 0, 0, 27, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 10, 12, 14, 16, 18, 20, 0, 0, 22, 0, 0, 0, 24, 26, 0, 0, 0, 0, 28, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2491348, 2478457, 2499774, 2459764, -112, 99, 2511766, 2447828, 2465218, 2504023, 2522817, 2438747, -59, 105, 2471407, 14, -69, 46, 2526583, 2410323, 81, 2, 48, -78, 2571469, -2, -28, 17, 0].span()
};
    let tree_23 = xgb_inference::Tree {
    base_weights: array![0, -8, 5, 0, -190, 108, 1, -3, 76, -109, -126, 1, 163, -61, 2, 0, -91, 20, -221, 74, -69, 199, 122, 48, -1, -4, 95, -36, -93, 32, 83, 26, 45, 24, 74, -73, 1, 0, -21, 45, -22, -17, 19, -16, 1].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 17, 19, 21, 0, 23, 25, 0, 0, 27, 0, 0, 29, 31, 33, 35, 37, 39, 0, 0, 0, 0, 0, 0, 41, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 18, 20, 22, 0, 24, 26, 0, 0, 28, 0, 0, 30, 32, 34, 36, 38, 40, 0, 0, 0, 0, 0, 0, 42, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2747387, 2731405, 2768933, 2727832, 2734346, 2754346, 2770982, 2723443, 76, -109, 2737491, 2751362, 2762862, -61, 2811752, 2707994, -91, 20, 2741147, 74, -69, 2757903, 2765466, 2808181, 2815614, 2688713, 2718614, -36, -93, 32, 83, 26, 45, 2783913, 74, -73, 2842342, 0, -21, 45, -22, -17, 19, -16, 1].span()
};
    let tree_24 = xgb_inference::Tree {
    base_weights: array![0, 2, -14, 0, 212, -35, -2, 1, -51, 93, 30, 57, -14, 0, 56, 77, 35, -113, -3, 1, -102, 93, -5, 12, 34, -5, 26, 3, -68, 33, -10, 0, 22, -70, -9, 35, 18, -1, -13].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 0, 0, 0, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 0, 0, 0, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3599162, 3559490, 3686410, 3534327, 3580166, -35, 3841447, 3463183, -51, 93, 30, 3742625, 3947160, 3408122, 3501006, 3709776, 3799055, 3891684, 4058129, 3353468, 3428226, 3480818, -5, 12, 34, -5, 26, 3, -68, 33, 118624160, 0, 22, -70, -9, 35, 18, -1, -13].span()
};
    let tree_25 = xgb_inference::Tree {
    base_weights: array![0, -8, 3, -2, -131, 147, 0, -7, 98, -88, -46, 8, 185, -105, 2, 0, -142, 107, -11, 3, -31, 71, 22, 61, -273, 105, 0, -4, 127, -23, -170, -3, 40, -107, -52, 77, 39, -114, 2, 0, -29, 26, 48, -72, -26, 37, 8, 43, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 21, 23, 25, 27, 29, 0, 0, 0, 0, 0, 0, 31, 33, 35, 37, 39, 41, 0, 43, 0, 0, 0, 0, 45, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 22, 24, 26, 28, 30, 0, 0, 0, 0, 0, 0, 32, 34, 36, 38, 40, 42, 0, 44, 0, 0, 0, 0, 46, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2642518, 2628257, 2658806, 2615434, 2632357, 2647346, 2671632, 2602123, 2619498, -88, 2638495, 8, 2654031, 2666947, 2688713, 2593722, 2605362, 107, -11, 3, -31, 71, 22, 2662644, 2669982, 2678934, 2692983, 2582588, 2598117, -23, 2608673, -3, 40, -107, -52, 2674936, 39, -114, 2698678, 0, -29, 26, 48, -72, -26, 37, 8, 43, 0].span()
};
    let tree_26 = xgb_inference::Tree {
    base_weights: array![0, -14, 2, -1, -97, 77, 0, -7, 40, -92, 1, 0, -51, -9, -44, 69, -1, -14, 142, 10, 128, -79, 2, -1, -17, 63, 20, 28, -42, 75, 18, 71, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 9, 11, 0, 13, 15, 17, 0, 0, 0, 19, 21, 23, 25, 27, 29, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 10, 12, 0, 14, 16, 18, 0, 0, 0, 20, 22, 24, 26, 28, 30, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2401987, 2388133, 2410323, 2371970, -97, 77, 2430922, 2345380, 40, 2424412, 2478457, 2294497, -51, -9, -44, 2459764, 2491348, 2115341, 2328477, 2447828, 2465218, -79, 2499774, -1, -17, 63, 20, 28, -42, 75, 18, 71, 0].span()
};
    let tree_27 = xgb_inference::Tree {
    base_weights: array![0, 4, -5, -3, 151, -132, -1, 4, -314, 186, 30, -144, 3, -3, 124, -177, -153, 46, 80, 137, -209, 92, -1, 1, -80, 164, 68, 69, -158, -1, 78, -13, 193, -97, 3, -2, 11, -100, -7, 27, 56, 7, 44, 25, -33, 35, 78, 5, -129, 31, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 0, 19, 21, 23, 25, 0, 27, 0, 0, 29, 0, 31, 33, 35, 37, 39, 41, 0, 0, 0, 0, 43, 45, 47, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 0, 20, 22, 24, 26, 0, 28, 0, 0, 30, 0, 32, 34, 36, 38, 40, 42, 0, 0, 0, 0, 44, 46, 48, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2904090, 2877588, 2909113, 2864392, 2894018, -132, 2926018, 2842342, 2869823, 2888733, 30, 2919635, 2944225, 2821390, 2855310, -177, 2873403, 46, 80, 2914407, -209, 2936202, 2960269, 2754346, 2824596, 2846093, 2861149, 69, -158, -1, 78, 2930164, 2939117, 2956535, 2971483, -2, 11, -100, -7, 27, 56, 7, 44, 25, -33, 35, 78, 5, -129, 31, 0].span()
};
    let tree_28 = xgb_inference::Tree {
    base_weights: array![0, -19, 1, -5, -15, 41, 0, 2, 64, -49, 1, 79, 9, -1, -71, 50, 0, 13, 33, -33, -9, -4, 103, -85, 1, 6, -9, 46, 14, -3, -69, 56, 0].span(),
    left_children: array![1, 3, 5, 0, 0, 7, 9, 0, 11, 13, 15, 17, 0, 0, 19, 21, 23, 0, 0, 0, 0, 25, 27, 29, 31, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 0, 0, 8, 10, 0, 12, 14, 16, 18, 0, 0, 20, 22, 24, 0, 0, 0, 0, 26, 28, 30, 32, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![1168381, 947617, 2042139, -5, -15, 1847756, 2235613, 2, 1968398, 2115341, 2345380, 1902391, 9, -1, 2176177, 2294497, 2401987, 13, 33, -33, -9, 2264257, 2328477, 2388133, 2410323, 6, -9, 46, 14, -3, -69, 56, 0].span()
};
    let tree_29 = xgb_inference::Tree {
    base_weights: array![0, 1, -10, 0, 152, -82, -2, 0, -37, 67, 22, -29, -15, 41, -10, -2, 11, 55, 25, -81, -2, 0, -122, 48, -1, 8, 25, -4, 19, 2, -49, 49, -12, -1, 13, -43, -21, 2, 20, -81, 2, 5, 34, -15, 2].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 0, 0, 0, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 0, 0, 0, 0, 0, 0, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 0, 0, 0, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 0, 0, 0, 0, 0, 0, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3599162, 3559490, 3686410, 3534327, 3580166, 3652092, 3841447, 3068555, -37, 67, 22, -29, -15, 3742625, 3947160, 3053391, 3143027, 3709776, 3799055, 3891684, 4312627, 3013939, 3065019, 3094615, 3148683, 8, 25, -4, 19, 2, -49, 4183412, 5597405, -1, 13, -43, -21, 2, 20, -81, 2, 5, 34, -15, 2].span()
};
    let tree_30 = xgb_inference::Tree {
    base_weights: array![0, 4, -5, -2, 108, -95, -2, 4, -225, 133, 22, -103, 1, -1, 89, -127, -109, 108, 57, 99, -150, 67, -2, 1, -104, 113, 27, 50, -113, 43, 87, -1, 56, -8, 140, -133, 1, 0, 69, -19, -52, 19, 37, -16, 32, 13, 38, 18, -23, 25, 56, -54, -23, 92, -1].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 0, 19, 21, 23, 25, 0, 27, 29, 0, 31, 0, 33, 35, 37, 39, 41, 43, 0, 0, 0, 45, 0, 0, 47, 49, 51, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 0, 20, 22, 24, 26, 0, 28, 30, 0, 32, 0, 34, 36, 38, 40, 42, 44, 0, 0, 0, 46, 0, 0, 48, 50, 52, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2904090, 2877588, 2909113, 2864392, 2894018, -95, 2926018, 2842342, 2869823, 2888733, 22, 2919635, 2944225, 2831972, 2858913, -127, 2873403, 2881707, 57, 2914407, -150, 2936202, 2951663, 2828642, 2838902, 2846093, 2861149, 50, -113, 43, 2885129, -1, 56, 2930164, 2939117, 2947919, 2956535, 0, 69, -19, -52, 19, 37, -16, 32, 13, 38, 18, -23, 25, 56, -54, -23, 92, -1].span()
};
    let tree_31 = xgb_inference::Tree {
    base_weights: array![0, 0, -32, 0, 38, -17, 3, 0, -70, 0, 20, -28, -13, 1, -49, 0, 27].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 0, 9, 11, 13, 0, 0, 0, 15, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 0, 10, 12, 14, 0, 0, 0, 16, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![118624160, 101319990, 317403500, 89209033, 38, -17, 3, 7536609, 95662524, 6542042, 20, -28, -13, 5597405, -49, 0, 27].span()
};
    let tree_32 = xgb_inference::Tree {
    base_weights: array![0, 3, -3, -1, 77, -68, -1, 3, -161, 92, 12, -74, 1, -1, 63, -91, -79, 69, 105, 71, -108, 48, -1, 2, -53, 95, 37, 36, -81, 31, 9, 35, 21, 0, 41, -6, 100, -61, 2, -1, 8, -72, -3, 17, 51, 7, 23, 13, -17, 18, 40, 3, -40, 86, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 0, 19, 21, 23, 25, 0, 27, 29, 31, 33, 0, 35, 37, 39, 41, 43, 45, 0, 0, 0, 0, 0, 0, 0, 0, 47, 49, 51, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 0, 20, 22, 24, 26, 0, 28, 30, 32, 34, 0, 36, 38, 40, 42, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 48, 50, 52, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2904090, 2877588, 2909113, 2864392, 2896843, -68, 2926018, 2842342, 2869823, 2885129, 12, 2919635, 2944225, 2821390, 2853126, -91, 2873403, 2881707, 2894018, 2914407, -108, 2936202, 2966997, 2754346, 2824596, 2850346, 2861149, 36, -81, 31, 9, 35, 21, 0, 41, 2930164, 2939117, 2956535, 2971483, -1, 8, -72, -3, 17, 51, 7, 23, 13, -17, 18, 40, 3, -40, 86, 0].span()
};
    let tree_33 = xgb_inference::Tree {
    base_weights: array![0, 6, -2, -1, 100, -193, 0, 3, -63, 51, 51, -76, -36, 78, -2, -1, 74, -62, -13, 26, 29, 64, 34, -81, 0, 4, -99, 78, -24, -30, 7, 17, -1, 27, 47, 105, -2, 0, 26, -15, -36, -13, -1, 3, -22, 7, 21, 14, 47, -67, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 0, 29, 31, 0, 33, 0, 0, 35, 37, 39, 0, 41, 43, 0, 0, 0, 0, 45, 47, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 0, 30, 32, 0, 34, 0, 0, 36, 38, 40, 0, 42, 44, 0, 0, 0, 0, 46, 48, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2666947, 2647346, 2671632, 2628257, 2654031, 2669982, 2688713, 2615434, 2632357, 51, 2662644, -76, -36, 2683692, 2692983, 2602123, 2619498, -62, 2642518, 2658806, 29, 2674936, 34, -81, 2698678, 2590438, 2605362, 78, 2623112, 2638495, 7, 17, -1, 27, 2678934, 2695330, 2701499, 0, 26, -15, -36, -13, -1, 3, -22, 7, 21, 14, 47, -67, 0].span()
};
    let tree_34 = xgb_inference::Tree {
    base_weights: array![0, 7, -2, -5, 99, -73, 0, 4, -120, 74, 68, -31, -132, 62, -1, -2, 77, 0, 84, -90, 26, -48, -28, 13, 28, -90, 0, 3, -73, 58, 41, -41, -11, -11, -40, 82, -1, -1, 33, -55, -5, 2, 32, -8, 56, -19, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 17, 19, 21, 23, 25, 27, 0, 0, 29, 31, 0, 0, 0, 0, 0, 33, 35, 37, 39, 0, 41, 0, 0, 0, 0, 43, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 18, 20, 22, 24, 26, 28, 0, 0, 30, 32, 0, 0, 0, 0, 0, 34, 36, 38, 40, 0, 42, 0, 0, 0, 0, 44, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2571469, 2548284, 2590438, 2540836, 2551461, 2582588, 2602123, 2534360, -120, 74, 2554781, 2579127, 2586578, 2598117, 2608673, 2522817, 77, 0, 2559228, 2576119, 26, -48, -28, 13, 28, 2605362, 2619498, 2511766, 2526583, 58, 2568702, -41, -11, -11, -40, 2615434, 2632357, -1, 33, -55, -5, 2, 32, -8, 56, -19, 0].span()
};
    let tree_35 = xgb_inference::Tree {
    base_weights: array![0, 5, -3, 1, 110, -86, 1, 3, -36, 22, 37, -62, -66, 54, 0, 0, 54, -136, -24, -49, 1, 2, -48, -15, -64, 55, -101, 99, -1, 0, 34, -78, -5, 38, 21, -29, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 0, 17, 0, 0, 19, 21, 0, 23, 25, 0, 27, 29, 0, 0, 0, 0, 31, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 0, 18, 0, 0, 20, 22, 0, 24, 26, 0, 28, 30, 0, 0, 0, 0, 32, 34, 36, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2718614, 2707994, 2747387, 2705086, 2712285, 2741147, 2751362, 2701499, -36, 22, 37, 2727832, -66, 54, 2754346, 2698678, 54, 2723443, 2731405, -49, 2768933, 2695330, -48, -15, -64, 55, 2734346, 2762862, 2780092, 0, 34, -78, -5, 38, 21, -29, 0].span()
};
    let tree_36 = xgb_inference::Tree {
    base_weights: array![0, -2, 4, 1, -41, 33, -2, -1, 65, -256, -4, 16, 72, -123, 5, 1, -156, -38, -111, 24, -86, 34, -58, 82, -1, -1, 66, -99, 8, 63, -8, -101, -15, 18, 66, 56, 45, -58, 4, 0, -28, 62, 5, -10, 28, -47, 10, -20, -40, 14, 0, 48, 10, 30, -9, -11, -23, 21, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 17, 19, 21, 0, 0, 23, 25, 27, 0, 0, 29, 31, 33, 0, 35, 37, 39, 41, 0, 0, 43, 45, 47, 0, 49, 51, 53, 0, 55, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 18, 20, 22, 0, 0, 24, 26, 28, 0, 0, 30, 32, 34, 0, 36, 38, 40, 42, 0, 0, 44, 46, 48, 0, 50, 52, 54, 0, 56, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3068555, 3001917, 3153665, 2995228, 3009388, 3148683, 3160907, 2983126, 65, 3005109, 3053391, 3143027, 72, -123, 3194664, 2966997, 2988351, -38, -111, 3030550, 3065019, 3118756, -58, 3186518, 3221716, 2956535, 2971483, -99, 8, 3013939, 3034681, 3059971, -15, 3086288, 3125656, 3177304, 45, 3207953, 3242688, 0, -28, 62, 5, -10, 28, -47, 10, -20, -40, 14, 0, 48, 10, 30, -9, -11, -23, 21, 0].span()
};
    let tree_37 = xgb_inference::Tree {
    base_weights: array![0, 1, -11, 0, 30, -19, 3, 1, -24, 65, -11, 0, 24, 25, 13, -35, 3, 0, -17, 14, -13, 0, 23, -15, 2].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 9, 11, 0, 13, 15, 17, 0, 0, 0, 0, 19, 21, 0, 0, 23, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 10, 12, 0, 14, 16, 18, 0, 0, 0, 0, 20, 22, 0, 0, 24, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4791019, 4500476, 5597405, 4312627, 30, -19, 6542042, 4183412, -24, 6094339, 7536609, 4058129, 24, 25, 13, -35, 89209033, 3947160, -17, 14, 101319990, 0, 23, -15, 2].span()
};
    let tree_38 = xgb_inference::Tree {
    base_weights: array![0, 0, -25, 0, 27, -13, 2, 0, -11, 0, 10, 0, -25, 0, 14].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 0, 9, 0, 11, 0, 13, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 0, 10, 0, 12, 0, 14, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![118624160, 101319990, 317403500, 89209033, 27, -13, 2, 7536609, -11, 6542042, 10, 5597405, -25, 0, 14].span()
};
    let tree_39 = xgb_inference::Tree {
    base_weights: array![0, 7, -1, -2, 95, -55, 1, 2, -29, 55, 47, 52, 0, -4, 51, -3, 30, -65, 0, 1, -71, 11, -49, 24, 0, -1, 18, -31, -11, -40, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 0, 0, 15, 0, 17, 19, 0, 0, 0, 21, 23, 25, 27, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 0, 0, 16, 0, 18, 20, 0, 0, 0, 22, 24, 26, 28, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2478457, 2459764, 2491348, 2447828, 2465218, -55, 2499774, 2438747, -29, 55, 2471407, 52, 2511766, 2424412, 51, -3, 30, 2504023, 2522817, 2401987, 2430922, 11, -49, 24, 2526583, -1, 18, -31, -11, -40, 0].span()
};
    let tree_40 = xgb_inference::Tree {
    base_weights: array![0, 4, -2, -1, 71, -139, 0, 2, -41, 36, 36, -55, -26, 55, -1, -1, 47, -39, -10, 18, 21, 14, 24, -58, 0, 5, -27, 40, 0, -22, 5, 12, -1, 34, -2, -1, 21, -16, -1, 2, -16, 2, 23, -19, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 17, 0, 19, 0, 0, 21, 23, 25, 27, 0, 29, 31, 0, 0, 0, 0, 33, 35, 37, 0, 0, 39, 0, 0, 0, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 20, 0, 0, 22, 24, 26, 28, 0, 30, 32, 0, 0, 0, 0, 34, 36, 38, 0, 0, 40, 0, 0, 0, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2666947, 2647346, 2671632, 2628257, 2654031, 2669982, 2688713, 2615434, 2632357, 36, 2662644, -55, -26, 2683692, 2692983, 2571469, 2619498, -39, 2642518, 2658806, 21, 14, 24, -58, 2718614, 2548284, 2590438, 40, 0, 2638495, 5, 12, -1, 2707994, 2747387, -1, 21, -16, -1, 2, -16, 2, 23, -19, 0].span()
};
    let tree_41 = xgb_inference::Tree {
    base_weights: array![0, 1, -7, 0, 110, -17, -1, 0, -26, 48, 16, 9, -7, 0, 38, -58, -2, 1, -45, 19, -4, 1, -35, 16, -5, 0, 32, -13, -1].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 0, 0, 0, 0, 15, 17, 19, 21, 23, 25, 0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 0, 0, 0, 0, 16, 18, 20, 22, 24, 26, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3599162, 3559490, 3686410, 3534327, 3580166, -17, 3841447, 3463183, -26, 48, 16, 9, 3947160, 3443639, 3501006, 3891684, 4058129, 3428226, -45, 19, -4, 1, -35, 16, 4183412, 0, 32, -13, -1].span()
};
    let tree_42 = xgb_inference::Tree {
    base_weights: array![0, 2, -3, -1, 54, -49, -1, 2, -116, 65, 8, -54, 0, 0, 44, -65, -57, 16, 80, 50, -78, 34, -1, 1, -37, 60, 4, 26, -59, 31, 15, -1, 29, -5, 72, -99, 1, 0, -13, 12, 22, -14, 16, 9, -12, 13, 29, -40, -17, 65, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 17, 0, 19, 21, 23, 25, 0, 27, 0, 29, 31, 0, 33, 35, 37, 0, 39, 41, 0, 0, 0, 0, 0, 0, 43, 45, 47, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 18, 0, 20, 22, 24, 26, 0, 28, 0, 30, 32, 0, 34, 36, 38, 0, 40, 42, 0, 0, 0, 0, 0, 0, 44, 46, 48, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2904090, 2877588, 2909113, 2864392, 2896843, -49, 2926018, 2842342, 2869823, 2888733, 8, 2919635, 2944225, 2838902, 2858913, -65, 2873403, 16, 2894018, 2914407, -78, 2936202, 2951663, 2831972, -37, 2850346, 2861149, 26, -59, 31, 15, -1, 29, 2930164, 2939117, 2947919, 2956535, 0, -13, 12, 22, -14, 16, 9, -12, 13, 29, -40, -17, 65, 0].span()
};
    let tree_43 = xgb_inference::Tree {
    base_weights: array![0, -2, 4, -1, -36, 36, 2, -1, 27, 24, -1, 1, -26, 5, 52, -88, 3, -1, 46, -184, -2, 26, -42, 58, 0, 0, -34, -27, -80, 13, -6, -10, 11, 12, 33, -12, 1].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 9, 11, 0, 13, 15, 17, 19, 21, 0, 0, 23, 25, 0, 27, 29, 31, 0, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 10, 12, 0, 14, 16, 18, 20, 22, 0, 0, 24, 26, 0, 28, 30, 32, 0, 34, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3094615, 3086288, 3101162, 3081053, -36, 36, 3153665, 3001917, 27, 3148683, 3160907, 2995228, 3009388, 3143027, 52, -88, 3194664, 2983126, 46, 3005109, 3030550, 3106011, -42, 3186518, 3226122, 0, -34, -27, -80, 13, -6, -10, 11, 12, 33, -12, 1].span()
};
    let tree_44 = xgb_inference::Tree {
    base_weights: array![0, 1, -6, 0, 41, -51, -1, 0, -19, -9, -51, 23, -3, -1, 41, -15, 3, -33, 0, 0, -69, 37, 22, 29, -6, 0, 26, -14, -33, -19, 13, 1, 23, -15, -1].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 15, 0, 0, 17, 19, 21, 0, 0, 0, 23, 25, 27, 0, 29, 31, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 16, 0, 0, 18, 20, 22, 0, 0, 0, 24, 26, 28, 0, 30, 32, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3369489, 3353468, 3428226, 3322262, 41, 3408122, 3443639, 3265109, -19, 3382536, -51, 23, 3463183, 3242688, 3272438, -15, 3, -33, 3599162, 3226122, 3256421, 37, 3277334, 3559490, 3652092, 0, 26, -14, -33, -19, 13, 1, 23, -15, -1].span()
};
    let tree_45 = xgb_inference::Tree {
    base_weights: array![0, 6, -1, -1, 69, -130, 0, 2, -21, 40, 34, -48, -28, 37, 0, -2, 37, -2, 22, -23, 1, 5, -37, 12, -86, 47, 0, 0, 31, -49, -1, -4, 56, 16, 0].span(),
    left_children: array![1, 3, 5, 7, 9, 11, 13, 15, 0, 0, 17, 0, 0, 0, 19, 21, 0, 0, 0, 23, 25, 27, 29, 31, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 12, 14, 16, 0, 0, 18, 0, 0, 0, 20, 22, 0, 0, 0, 24, 26, 28, 30, 32, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2478457, 2459764, 2491348, 2447828, 2465218, 2485248, 2499774, 2438747, -21, 40, 2471407, -48, -28, 37, 2548284, 2388133, 37, -2, 22, 2540836, 2551461, 2371970, 2401987, 2534360, -86, 47, 2559228, 0, 31, -49, -1, -4, 56, 16, 0].span()
};
    let tree_46 = xgb_inference::Tree {
    base_weights: array![0, -14, 0, -8, -13, 12, -1, -14, 5, 3, 78, -34, 0, -5, -11, 13, -24, 34, 12, 22, 0, -6, 7, -5, 34, -23, -2, -35, 0, 7, -3, 12, 0, 36, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 15, 17, 0, 19, 21, 0, 23, 25, 0, 0, 0, 27, 0, 0, 29, 31, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 16, 18, 0, 20, 22, 0, 24, 26, 0, 0, 0, 28, 0, 0, 30, 32, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![752032, 726565, 2345380, 656215, -13, 2294497, 2371970, 180514, 5, 2115341, 2328477, -34, 2388133, 152628, -11, 1718510, 2176177, 34, 12, 22, 2401987, -6, 7, 782553, 2042139, -23, -2, -35, 2410323, 7, -3, 12, 0, 36, 0].span()
};
    let tree_47 = xgb_inference::Tree {
    base_weights: array![0, 0, -8, 0, 22, -54, 0, 0, -17, -9, -22, 6, -16, 0, 18, -1, 20, -9, 2, 0, -24, 16, -12, 0, 2, -25, 2, -6, 10, -18, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 0, 0, 15, 17, 19, 0, 21, 0, 0, 0, 23, 25, 27, 29, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 0, 0, 16, 18, 20, 0, 22, 0, 0, 0, 24, 26, 28, 30, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![4791019, 4500476, 5325393, 4312627, 22, 4997172, 118624160, 4183412, -17, -9, -22, 101319990, 317403500, 3891684, 18, 6542042, 20, -9, 2, 3265109, 3947160, 5597405, 7536609, 0, 2, -25, 2, -6, 10, -18, 0].span()
};
    let tree_48 = xgb_inference::Tree {
    base_weights: array![0, 1, -4, 0, 29, -38, 0, 0, -12, -8, -37, 16, -2, 0, 28, -11, 2, -24, 0, 0, -23, 18, -1, 0, 36, -6, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 9, 11, 13, 0, 15, 0, 0, 17, 19, 0, 0, 0, 0, 21, 23, 0, 0, 25, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 10, 12, 14, 0, 16, 0, 0, 18, 20, 0, 0, 0, 0, 22, 24, 0, 0, 26, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![3369489, 3353468, 3428226, 3306236, 29, 3408122, 3443639, 3297054, -12, 3382536, -37, 16, 3463183, 3285346, 28, -11, 2, -24, 3480818, 3277334, -23, 18, 3559490, 0, 36, -6, 0].span()
};
    let tree_49 = xgb_inference::Tree {
    base_weights: array![0, 2, -2, 0, 39, -35, -1, 2, -83, 14, 6, -23, 1, 0, 32, -47, -40, 0, -73, 71, -1, 1, -26, 53, 15, 19, -42, -18, 47, 8, 45, -43, 1, 0, 22, 8, 30, 2, 12, 11, -10, 4, -61, 28, -1].span(),
    left_children: array![1, 3, 5, 7, 9, 0, 11, 13, 15, 0, 0, 17, 19, 21, 23, 0, 25, 27, 0, 29, 31, 33, 0, 35, 37, 0, 0, 39, 0, 0, 0, 41, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 10, 0, 12, 14, 16, 0, 0, 18, 20, 22, 24, 0, 26, 28, 0, 30, 32, 34, 0, 36, 38, 0, 0, 40, 0, 0, 0, 42, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2904090, 2877588, 2909113, 2864392, 2896843, -35, 2960269, 2842342, 2869823, 14, 6, 2956535, 2971483, 2838902, 2853126, -47, 2873403, 2951663, -73, 2966997, 2988351, 2835710, -26, 2850346, 2861149, 19, -42, 2919635, 47, 8, 45, 2983126, 3001917, 0, 22, 8, 30, 2, 12, 11, -10, 4, -61, 28, -1].span()
};
    let tree_50 = xgb_inference::Tree {
    base_weights: array![0, 2, -2, -1, 88, -40, 0, 1, -44, 84, -2, -1, 84, -41, -19, 43, 48, -58, 0, 2, -40, 44, 49, 23, -52, 5, 21, 21, -1, 0, 45, -50, -5, 8, 21, -41, -1, -52, 0].span(),
    left_children: array![1, 3, 5, 7, 0, 0, 9, 11, 13, 15, 17, 19, 21, 0, 23, 25, 0, 0, 27, 29, 31, 0, 33, 0, 35, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    right_children: array![2, 4, 6, 8, 0, 0, 10, 12, 14, 16, 18, 20, 22, 0, 24, 26, 0, 0, 28, 30, 32, 0, 34, 0, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_indices: array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span(),
    split_conditions: array![2790453, 2786868, 2798959, 2768933, 88, -40, 2811752, 2757903, 2770982, 2808181, 2815614, 2731405, 2762862, -41, 2774627, 2804692, 48, -58, 2821390, 2727832, 2734346, 44, 2765466, 23, 2780092, 5, 21, 21, 2824596, 0, 45, -50, -5, 8, 21, -41, -1, -52, 0].span()
};
    let tree_51 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_52 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_53 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_54 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_55 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_56 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_57 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_58 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_59 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_60 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_61 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_62 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_63 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_64 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_65 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_66 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_67 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_68 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_69 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_70 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_71 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_72 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_73 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_74 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_75 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_76 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_77 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_78 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_79 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_80 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_81 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_82 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_83 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_84 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_85 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_86 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_87 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_88 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_89 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_90 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_91 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_92 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_93 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_94 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_95 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_96 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_97 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_98 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let tree_99 = xgb_inference::Tree {
    base_weights: array![0].span(),
    left_children: array![0].span(),
    right_children: array![0].span(),
    split_indices: array![0].span(),
    split_conditions: array![0].span()
};
    let num_trees: u32 = 100;
    let base_score: i32 = 97099;
    let opt_type: u8 = 0;
    let trees: Span<xgb_inference::Tree> = array![tree_0, tree_1, tree_2, tree_3, tree_4, tree_5, tree_6, tree_7, tree_8, tree_9, tree_10, tree_11, tree_12, tree_13, tree_14, tree_15, tree_16, tree_17, tree_18, tree_19, tree_20, tree_21, tree_22, tree_23, tree_24, tree_25, tree_26, tree_27, tree_28, tree_29, tree_30, tree_31, tree_32, tree_33, tree_34, tree_35, tree_36, tree_37, tree_38, tree_39, tree_40, tree_41, tree_42, tree_43, tree_44, tree_45, tree_46, tree_47, tree_48, tree_49, tree_50, tree_51, tree_52, tree_53, tree_54, tree_55, tree_56, tree_57, tree_58, tree_59, tree_60, tree_61, tree_62, tree_63, tree_64, tree_65, tree_66, tree_67, tree_68, tree_69, tree_70, tree_71, tree_72, tree_73, tree_74, tree_75, tree_76, tree_77, tree_78, tree_79, tree_80, tree_81, tree_82, tree_83, tree_84, tree_85, tree_86, tree_87, tree_88, tree_89, tree_90, tree_91, tree_92, tree_93, tree_94, tree_95, tree_96, tree_97, tree_98, tree_99].span();
    let mut result: i32 = xgb_inference::accumulate_scores_from_trees(num_trees, trees, input_vector, 0, 0);

    if opt_type == 1 {
        // Implement logic here
    } else {
        result = result + base_score;
    }

    return result;
}